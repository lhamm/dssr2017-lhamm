function CompGenWD = calcWD(PixelWidth,TargetSize,Resolution,FOV)

%function used to caluclate working distance
%first argument is measure of width of pixels of given selection
%second argumecnt is resolution of device camera
%third argument is size of the image seen by the participant (angle)

%PixelWidth      = 32.8; %Lisa to import from results, 15 dummy fixed
halfPixelWidth  = PixelWidth/2;

%FOV             = 80; %can become dynamic
%ScreenReso      = [1920 1080]; %make dynamic so can change between 40 and 150cm
%ClipImgHeight   = 640;
%ImgReso         = (Resolution/ClipImgHeight);
%CameraAngle     = (ClipImgHeight/FOV);

TargDiam        = 3.4;
halfTargSize    = TargetSize/2; 

CompGenWD       = halfTargSize/tand((halfPixelWidth/(Resolution/FOV)));

%TARGETS
%BullseyeSize  = 3.4cm divide by 2 for trig purposes
%ASSUME pixels of screen are 360p vertically
%need to know what the total angle is for the full screen height is
%PIXELWIDTH
%Width given by computer/2 for trig purposes

%FOV = whatever total angle = whatever total pixels (360p)
%pixelwidth(p) = whatever bullseye pixel amount
%pixelwidth(cm) = 2.25cm
%therefore pixelwidth(cm)sinpixelwidth(p)

% What I need is
% Angle to full FOV             = pixels per degree (40) - 8.4434
                             %  = 80 FOV
                             % = ppd (1.5) 25.2537 = 80FOV thus over 360p
                             % there is approx a 80/3deg FOV (zoom/crop??)
% Bull Size                     = 3.4cm total diameter

%clipped image size 640x360 (0.4), 1920x1080 (1.5)
%bullseye pixel amount (30 at 0.4, 50 at 1.5)


% What I will do
% At 40cm
% At 360p vertically there is 80deg FOV
% The pixel total of the bullseye is 30 thus half is (15) <--
% IF 15p is half a bullseye, it is then equal to 1.7cm
% If 15p is half a bullseye, at 8.4434 ppd, there is 15/8.4434 1.7765deg of
% angle here
% We now have the right angle triangle needed so calculate using
% 1.7/tan1.7765
% Multiply by original working distance

% Actual Code

% At 40cm
%ScreenReso = 640x360 (in code?)'
%ClipImgHeight = 360 (in code?)'

%ScreenResoG = [SRG1 SRG2]
%ScreenReso150 = [1920 1080]
%ImgReso150 = (ScreenReso(1,2)/ClipImgHeight)

%PixelWidth = TotalPixelWidth/2;
%TargetSize = ObjDiam/2;

%ImgReso function depend on zoom/crop that occurs







